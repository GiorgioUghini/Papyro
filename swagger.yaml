openapi: 3.0.0
info:
  title: Papyro API
  description: Hypermedia project for a library (2019)
  version: 1.0.0
servers:
  - url: http://papyro.tk/api
    description: Base URL of the API server
paths:
  /authors:
    get:
      summary: Returns a list of authors.
      responses:
        '200':    # status code
          description: A JSON array of authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Authors'
  /authors/{id}:
    get:
      summary: Return author's details
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            format: int32
          required: true
          description: id of the author to get
      responses:
        '200':
          description: An author with its books
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Author'
        '404':
          description: No authors with that id
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Error'
  /books:
    get:
      summary: A list of books
      parameters:
        - in: query
          name: themes
          schema:
            type: string
            example: '1,2'
          description: a comma-separated list of theme ids to filter by. Returns all the books with at least 1 matching theme
        - in: query
          name: genres
          schema:
            type: string
            example: '1,2'
          description: a comma-separated list of genre ids to filter by. Returns all the books with at least 1 matching genre
        - in: query
          name: authors
          schema:
            type: string
            example: '1,2'
          description: a comma-separated list of author ids to filter by. Returns all the books with at least 1 matching author
        - in: query
          name: isFavorite
          schema:
            type: boolean
          description: Show our favorite books only
        - in: query
          name: bestSeller
          schema:
            type: boolean
          description: Show best sellers only
      responses:
        '200':
          description: A list of books with eventual filters applyed
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Books'
        '404':
          description: No book matched the filter
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Error'
components:
  schemas:
    Authors:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        picture:
          type: string
        bio:
          type: string
    Author:
      allOf:
        - $ref: '#components/schemas/Authors'
        - type: object
          properties:
            books:
              type: array
              $ref: '#components/schemas/BaseBook'
    BaseBook:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        picture:
          type: string
        abstract:
          type: string
        interview:
          type: string
        isFavorite:
          type: boolean
    Books:
      allOf:
        - $ref: '#components/schemas/BaseBook'
        - type: object
          properties:
            genres:
              type: array
              items:
                type: string
            themes:
              type: array
              items:
                type: string
            authors:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                  name:
                    type: string
    Book:
      allOf:
        - $ref: '#components/schemas/Books'
        - type: object
          properties:
            events:
              type: array
              $ref: '#components/schemas/Event'

    Genre:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Theme:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Event:
      type: object
      properties:
        id:
          type: integer
          format: int32
        location:
          type: string
        date:
          type: string
          format: date
    Error:
      type: object
      properties:
        message:
          type: string